:title: دوپینگ lua
:author: عباس یزدان پناه
:description: این ارائه 
:keywords: presentation, abyz, lua, tutorial
:css: lua.css

----

:data-x: r2000



.. raw:: html

	<h2>باسمه تعالی</h2>


دوپینگ lua ;)
=========================================================

عباس یزدان‌پناه 
------------------------------





----




فهرست
===========================================

- درباره من!
- نصب و راه‌اندازی
- شروع کار با lua
- متغیرها و انواع
- عبارات
- توابع



----

:data-x: r0
:data-y: r1080


فهرست ادامه
===========================================

- ساختار تکرار و انواع عمومی
- جداول
- کتابخانه استاندارد


----

:data-x: r2000
:data-y: 0

درباره من!
===========================================

- یه یادگیر همیشگی
- دوست داشته معلم بشه اما نشده
- دوست داشته به دیگران کمک کنه
- دوست داشته تجربه کنه


----

:data-x: r2000
:data-y: 0

چرا این درس!
===========================================

- ما داریم از lua برای نوشتن راحت‌تر سناریو تست استفاده می‌کنیم
- چون lua به راحتی می‌تونه با C حرف بزنه
- و C زبان دلخواه ماست!


----

:data-x: r2000
:data-y: 0

نصب و راه‌اندازی lua
===========================================

- فرض ما بر استفاده از luajit
- تفاوت اساسی با نسخه اصلی lua ندارند
- بهتر است از zerobrane studio استفاده شود



----

:data-x: r2000
:data-y: 0

شروع کار با lua - سلام دنیا
===========================================

- سلام دنیا!::


.. code:: lua

    print("Hello World")


----

:data-x: r0
:data-y: r1080


شروع کار با lua - فیبوناچی
===========================================


- می‌توان سری فیبوناچی را بصورت زیر پیاده سازی کرد

.. code:: lua

    -- defines a factorial function
    function fact (n)
      if n == 0 then
        return 1
      else
        return n * fact(n-1)
      end
    end
    print("enter a number:")
    a = io.read("*number")        -- read a number
    print(fact(a))






----


:data-x: r2000
:data-y: 0

متغیرها و انواع - متغیر عمومی
===========================================

- متغیرهای عمومی

.. code:: lua

    print(b)  --> nil
    b = 10
    print(b)  --> 10


----

:data-x: r0
:data-y: r1080


متغیرها و انواع - انواع
===========================================

 انواع موجود در lua به شرح زیر هستند

.. code:: lua

    print(type("Hello world"))  --> string
    print(type(10.4*3))         --> number
    print(type(print))          --> function
    print(type(type))           --> function
    print(type(true))           --> boolean
    print(type(nil))            --> nil
    print(type(type(X)))        --> string
    print(type({}))             --> table

----

متغیرها و انواع - انواع
===========================================

 متغیرها بدون نوع هستند یعنی هر متغیری می‌تواند از هر نوعی باشد

.. code:: lua

    print(type(a))   --> nil   (`a' is not initialized)
    a = 10
    print(type(a))   --> number
    a = "a string!!"
    print(type(a))   --> string
    a = print        -- yes, this is valid!
    a(type(a))       --> function


----

:data-x: r2000
:data-y: 0


عبارات
===========================================
- عبارات در lua به صورت زیر هستند

.. code:: lua
    
    a = 1
    b = a*2
    a = 1;
    b = a*2;
    a = 1 ; b = a*2
    a = 1   b = a*2    -- ugly, but valid


----

:data-x: r0
:data-y: r1080


عبارات - عملگرهای محاسباتی
===========================================

عملگرهای محاسباتی عبارتند از:

* عملگرهای با دو عملوند
    - جمع +
    - منها ‍‍-
    - ضرب *
    - تقسیم /
    - توان ^
* عملگرهای با یک عملوند
    - منفی




----

عبارات - عملگرهای مقایسه‌ای
===========================================

عملگرهای مقایسه‌ای عبارتند از::

    <   >   <=  >=  ==  ~=

----

عبارات - عملگرهای منطقی
===========================================

عملگرهای منطقی عبارتند از::

    and, or, not

توجه کنید که nil به عنوان false در نظر گرفته می‌شود.

----

عبارات - عملگر الحاق
===========================================

نمونه‌هایی از الحاق به شکل زیر است

.. code:: lua

    print("Hello " .. "World")  --> Hello World
    print(0 .. 1)               --> 01
    a = "Hello"
    print(a .. " World")   --> Hello World
    print(a)               --> Hello


----

عبارات - عملگر الحاق
===========================================

اولویت عملگرها به شرح زیر است

.. code:: lua

    ^
    not  - (unary)
    *   /
    +   -
    ..
    <   >   <=  >=  ~=  ==
    and
    or

----

:data-x: r2000
:data-y: 0


توابع
===========================================




----

:data-x: r2000
:data-y: 0

ساختار تکرار و انواع عمومی
===========================================


----

:data-x: r2000
:data-y: 0
:data-scale: 1

جداول
===========================================








----

:data-x: r2000
:data-y: 0

کتابخانه استاندارد
===========================================




----

:data-x: r2000
:data-y: 0

جمع بندی
===========================================



----


:data-y: 0
:data-x: r2000
:data-rotate-x: r90
:class: justheader

abzy.ir
================================

.. raw:: html
	
	<div>
	<a href="http://twitter.com/yazdanpanaha" class="icon-twitter icon-2x"></a>yazdanpanaha
	<a href="http://github.com/yazdan" class="icon-octocat icon-2x"></a>yazdan
	</div>



